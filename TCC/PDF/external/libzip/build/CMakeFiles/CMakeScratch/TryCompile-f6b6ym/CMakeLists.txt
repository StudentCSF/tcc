cmake_minimum_required(VERSION 3.28.3.0)
set(CMAKE_MODULE_PATH "/Users/daniil/tcc/TCC/PDF/external/libzip/src/cmake")
cmake_policy(SET CMP0126 OLD)
cmake_policy(SET CMP0128 OLD)
project(CMAKE_TRY_COMPILE C)
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_C_FLAGS "")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${COMPILE_DEFINITIONS}")
set(CMAKE_EXE_LINKER_FLAGS "")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXE_LINKER_FLAGS}")
include_directories(${INCLUDE_DIRECTORIES})
set(CMAKE_SUPPRESS_REGENERATION 1)
link_directories(${LINK_DIRECTORIES})
add_definitions([==[-D__STDC_WANT_LIB_EXT1__=1]==])
cmake_policy(SET CMP0065 NEW)
cmake_policy(SET CMP0083 OLD)
cmake_policy(SET CMP0155 OLD)
include("${CMAKE_ROOT}/Modules/Internal/HeaderpadWorkaround.cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "/Users/daniil/tcc/TCC/PDF/external/libzip/build/CMakeFiles/CMakeScratch/TryCompile-f6b6ym")
add_executable(cmTC_6d901)
target_sources(cmTC_6d901 PRIVATE
  "/Users/daniil/tcc/TCC/PDF/external/libzip/build/CMakeFiles/CMakeScratch/TryCompile-f6b6ym/CheckFunctionExists.c"
)
file(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/cmTC_6d901_loc"
     CONTENT $<TARGET_FILE:cmTC_6d901>)
target_link_libraries(cmTC_6d901 ${LINK_LIBRARIES})
